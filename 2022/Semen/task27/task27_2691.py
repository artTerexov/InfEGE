# Имеется набор данных, состоящий из троек положительных целых чисел. Необходимо выбрать из каждой тройки два числа так, чтобы сумма всех выбранных чисел не делилась на 9 и при этом была минимально возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать одно число – минимально возможную сумму, соответствующую условиям задачи.
# Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество троек N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит три натуральных числа, не превышающих 10 000.
# Пример входного файла:
# 6
# 8 3 4
# 4 8 12
# 9 8 11
# 2 8 3
# 12 3 5
# 1 4 11
# Для указанных входных данных значением искомой суммы должно быть число 56.
# В ответе укажите два числа: сначала искомое значение для файла А, затем для файла B.

with open("files/27-31a.txt") as f:
    s = [[int(j) for j in i.split()] for i in f.read().strip().split("\n")]

s.pop(0)
summa = 0
buff = []

for i in s:
    i.sort()
    num = i[0]
    num1 = i[1]
    num2 = i[2]
    summa += (num + num1)
    buff.append(abs((num + num1) - (num + num2)))
    buff.append(abs(num + num1) - (num1 + num2))
print(summa)
end = []

if summa % 9 != 0:
    end.append(summa)
else:
    for i in buff:
        if (summa + i) % 9 != 0:
            end.append(summa + i)

print(min(end))
