# Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит две кучи камней. Игроки ходят по очереди, первый
# ход делает Петя. За один ход игрок может добавить в любую кучу один камень или добавить в любую кучу столько
# камней, сколько их в данный момент в другой куче. Игра завершается в тот момент, когда общее количество камней в двух
# кучах становится не менее 81. Победителем считается игрок, сделавший последний ход. В начальный момент в первой куче
# было 7 камней, а во второй – S камней, 1 ≤ S ≤ 73.
# Ответьте на следующие вопросы:
#   Вопрос 1. Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Назовите минимальное
# значение S, при котором это возможно.
#   Вопрос 2. Найдите минимальное и максимальное значение S, при котором у Пети есть выигрышная стратегия,
# причём одновременно выполняются два условия:
# − Петя не может выиграть за один ход;
# − Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.
# Найденные значения запишите в ответе в порядке возрастания.
#   Вопрос 3. Найдите значение S, при котором одновременно выполняются два условия:
# – у Вани есть выигрышная стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети;
# – у Вани нет стратегии, которая позволит ему гарантированно выиграть первым ходом.

def F(a, b, c):
    if a + b >= 81 or c > 3: return c == 3
    return F(a + 1, b, c + 1) or F(a + b, b, c + 1) or F(a, b + 1, c + 1) or F(a, b + a, c + 1)

for i in range(1, 74):
    if F(7, i, 1):
        print('1)' , i)
        break


def F(a, b, c):
    if a + b >= 81 or c > 4: return c == 4
    if c % 2 == 1:
        return F(a + 1, b, c + 1) or F(a + b, b, c + 1) or F(a, b + 1, c + 1) or F(a, b + a, c + 1)
    else:
        return F(a + 1, b, c + 1) and F(a + b, b, c + 1) and F(a, b + 1, c + 1) and F(a, b + a, c + 1)

for i in range(1, 74):
    if F(7, i, 1):
        print('2)' , i)


def F(a, b, c):
    if a + b >= 81 or c > 5: return c == 3 or c == 5
    if c % 2 == 0:
        return F(a + 1, b, c + 1) or F(a + b, b, c + 1) or F(a, b + 1, c + 1) or F(a, b + a, c + 1)
    else:
        return F(a + 1, b, c + 1) and F(a + b, b, c + 1) and F(a, b + 1, c + 1) and F(a, b + a, c + 1)

for i in range(1, 74):
    if F(7, i, 1):
        print('3)', i)