# В файле 17-1.txt содержится последовательность целых чисел.
# Элементы последовательности могут принимать целые значения от –10 000 до 10 000 включительно.
# Определите количество троек, в которых хотя бы два из трёх элементов меньше,
# чем среднее арифметическое всех чисел в файле,
# и десятичная запись хотя бы одного из трёх элементов оканчивается на 14.
# В ответе запишите два числа: сначала количество найденных троек, а затем – максимальную сумму элементов таких троек.
# В данной задаче под тройкой подразумевается три идущих подряд элемента последовательности.

with open('files/17-1.txt') as f:
    s = f.read().strip().split('\n')


result = []
k = [int(i) for i in s]

average = sum(k) / len(k)

print(average)
# for i in range(len(s)):
#     k += int(i)
# k /= len(s)

for l in range(1, len(s) - 1):
# #     if (int(s[l - 1]) < k and int(s[l]) < k) or (int(s[l - 1]) < k and int(s[l + 1]) < k) or (int(s[l]) < k and int(s[l + 1]) < k) and ((s[l][-1] == 4 and s[l][-2] == 1) or (s[l + 1][-1] == 4 and s[l + 1][-2] == 1) or (s[l - 1][-1] == 4 and s[l - 1][-2] == 1)):
# #         result.append(s[l - 1] + s[l] + s[l + 1])
    n = 0
    if int(s[l - 1]) < average:
        n += 1
    if int(s[l]) < average:
        n += 1
    if int(s[l + 1]) < average:
        n += 1
    if n > 1:
        if (s[l][-1] == 4 and s[l][-2] == 1) or (s[l + 1][-1] == 4 and s[l + 1][-2] == 1) or (s[l - 1][-1] == 4 and s[l - 1][-2] == 1):
            result.append(s[l - 1] + s[l] + s[l + 1])

print(len(result), max(result))
