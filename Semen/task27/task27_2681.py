# Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой
# пары ровно одно число так, чтобы сумма всех выбранных чисел оканчивалась на 8 и при этом была
# максимально возможной. Гарантируется, что искомую сумму получить можно. Программа должна напечатать
# одно число – максимально возможную сумму, соответствующую условиям задачи.
# Входные данные. Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке
# количество пар N (1 ≤ N ≤ 100000). Каждая из следующих N строк содержит два натуральных числа,
# не превышающих 10 000.
# Пример входного файла:
# 6
# 1 3
# 5 12
# 6 9
# 5 4
# 3 3
# 5 1
# Для указанных входных данных значением искомой суммы должно быть число 28.
# В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.


with open('files/27-21b.txt') as f:
    s = f.read().strip().split('\n')

s.pop(0)
D = 10
buff = [100000] * D
result = 0

for i in s:
    numOne = int(i.split()[0])
    numTwo = int(i.split()[1])
    result += max(numOne, numTwo)
    diff = abs(numTwo - numOne)
    ostat = diff % D
    if ostat > 0:
        newBuff = buff.copy()
        for k in range(1, D):
            r0 = (k + ostat) % D
            newBuff[r0] = min(newBuff[r0], diff + buff[k])
        newBuff[ostat] = min(diff, newBuff[ostat])
        buff = newBuff

if result % D == 8:
    print(result)
else:
    print(result - buff[result % D - 8])

